(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[27],{4498:function(e,n,t){"use strict";t.d(n,{E:function(){return s}});var o=t(7462),a=t(7294),r=t(6591),s=a.forwardRef((function(e,n){return a.createElement(r.r,(0,o.Z)({iconAttrs:{fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"},iconVerticalAlign:"middle",iconViewBox:"0 0 496 512"},e,{ref:n}),a.createElement("path",{fill:"currentColor",d:"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"}))}));s.displayName="Github"},927:function(e,n,t){"use strict";t.d(n,{H:function(){return s}});var o=t(7462),a=t(7294),r=t(6591),s=a.forwardRef((function(e,n){return a.createElement(r.r,(0,o.Z)({iconAttrs:{fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"},iconVerticalAlign:"middle",iconViewBox:"0 0 512 512"},e,{ref:n}),a.createElement("path",{fill:"currentColor",d:"M71.5 142.3c.6-5.9-1.7-11.8-6.1-15.8L20.3 72.1V64h140.2l108.4 237.7L364.2 64h133.7v8.1l-38.6 37c-3.3 2.5-5 6.7-4.3 10.8v272c-.7 4.1 1 8.3 4.3 10.8l37.7 37v8.1H307.3v-8.1l39.1-37.9c3.8-3.8 3.8-5 3.8-10.8V171.2L241.5 447.1h-14.7L100.4 171.2v184.9c-1.1 7.8 1.5 15.6 7 21.2l50.8 61.6v8.1h-144v-8L65 377.3c5.4-5.6 7.9-13.5 6.5-21.2V142.3z"}))}));s.displayName="MediumM"},8410:function(e,n,t){"use strict";t.d(n,{x:function(){return s}});var o=t(7462),a=t(7294),r=t(6591),s=a.forwardRef((function(e,n){return a.createElement(r.r,(0,o.Z)({iconAttrs:{fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"},iconVerticalAlign:"middle",iconViewBox:"0 0 24 24"},e,{ref:n}),a.createElement("path",{fill:"none",d:"M0 0h24v24H0z"}),a.createElement("path",{d:"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}))}));s.displayName="Close"},2524:function(e,n,t){"use strict";t.d(n,{W:function(){return s}});var o=t(7462),a=t(7294),r=t(6591),s=a.forwardRef((function(e,n){return a.createElement(r.r,(0,o.Z)({iconAttrs:{fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"},iconVerticalAlign:"middle",iconViewBox:"0 0 24 24"},e,{ref:n}),a.createElement("path",{fill:"none",d:"M0 0h24v24H0V0z"}),a.createElement("path",{d:"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"}))}));s.displayName="KeyboardArrowDown"},5595:function(e,n,t){"use strict";t.d(n,{o:function(){return s}});var o=t(7462),a=t(7294),r=t(6591),s=a.forwardRef((function(e,n){return a.createElement(r.r,(0,o.Z)({iconAttrs:{fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"},iconVerticalAlign:"middle",iconViewBox:"0 0 24 24"},e,{ref:n}),a.createElement("path",{fill:"none",d:"M0 0h24v24H0z"}),a.createElement("path",{d:"M15.5 14h-.79l-.28-.27A6.471 6.471 0 0016 9.5 6.5 6.5 0 109.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"}))}));s.displayName="Search"},710:function(e,n,t){"use strict";var o=t(2777),a=t(2262),r=t(748),s=t(5959),i=t(3553),l=t(7247),p=t(9499),c=t(7294),d=t(4505),m=t(8461),u=t(6390),h=t(5893);function g(e){var n=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var t,o=(0,l.Z)(e);if(n){var a=(0,l.Z)(this).constructor;t=Reflect.construct(o,arguments,a)}else t=o.apply(this,arguments);return(0,i.Z)(this,t)}}var y=function(e){(0,s.Z)(t,e);var n=g(t);function t(){var e;(0,o.Z)(this,t);for(var a=arguments.length,s=new Array(a),i=0;i<a;i++)s[i]=arguments[i];return e=n.call.apply(n,[this].concat(s)),(0,p.Z)((0,r.Z)(e),"state",{isSideFolded:!0,isMobileNavFolded:!0}),(0,p.Z)((0,r.Z)(e),"onSideToggle",(function(){e.setState({isSideFolded:!e.state.isSideFolded,isMobileNavFolded:!0})})),(0,p.Z)((0,r.Z)(e),"onMobileNavToggle",(function(){e.setState({isMobileNavFolded:!e.state.isMobileNavFolded,isSideFolded:!0})})),(0,p.Z)((0,r.Z)(e),"onRouteChange",(function(){e.setState({isSideFolded:!0,isMobileNavFolded:!0})})),e}return(0,a.Z)(t,[{key:"render",value:function(){var e=this.props,n=e.children,t=e.title,o=e.description,a=e.useDocsSidebarMenu,r=void 0===a||a,s=e.pages,i=this.state,l=i.isSideFolded,p=i.isMobileNavFolded;return(0,h.jsxs)(u.W2,{children:[(0,h.jsx)(d.Z,{title:"styled-components".concat(t?": ".concat(t):""),description:o,children:(0,h.jsx)("meta",{name:"robots",content:"noodp"})}),(0,h.jsx)(m.Z,{useDocsSidebarMenu:r,isSideFolded:l,isMobileNavFolded:p,pages:s,onSideToggle:this.onSideToggle,onMobileNavToggle:this.onMobileNavToggle,onRouteChange:this.onRouteChange}),(0,h.jsxs)(u.VY,{moveRight:!l,"data-e2e-id":"content",children:[(0,h.jsx)(u.Dx,{children:t}),n]})]})}}]),t}(c.Component);(0,p.Z)(y,"defaultProps",{title:"",description:""}),n.Z=y},8916:function(e,n,t){"use strict";t.d(n,{Z:function(){return k}});var o=t(186),a=t(7462),r=t(7294),s=t(6591),i=r.forwardRef((function(e,n){return r.createElement(s.r,(0,a.Z)({iconAttrs:{fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"},iconVerticalAlign:"middle",iconViewBox:"0 0 24 24"},e,{ref:n}),r.createElement("path",{fill:"none",d:"M0 0h24v24H0V0z"}),r.createElement("path",{d:"M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z"}))}));i.displayName="KeyboardArrowRight";var l=t(6549),p=t(2250),c=t(5184),d=t(3401),m=t(688),u=t(5893),h=(0,o.ZP)(p.ZP).attrs((function(){return{unstyled:!0}})).withConfig({displayName:"NextPage__Wrapper",componentId:"sc-xdq90t-0"})(["display:flex;flex-direction:row;align-items:stretch;justify-content:flex-end;width:100%;padding:"," ",";text-align:right;font-family:",";",";"],(0,l.Z)(40),(0,l.Z)(20),m.Cc,(0,d.a)((0,o.iv)(["text-align:left;justify-content:center;padding:"," ",";"],(0,l.Z)(30),(0,l.Z)(20)))),g=o.ZP.h3.withConfig({displayName:"NextPage__Text",componentId:"sc-xdq90t-1"})(["font-weight:normal;padding-right:",";margin:0;"],(0,l.Z)(20)),y=o.ZP.h2.withConfig({displayName:"NextPage__PageName",componentId:"sc-xdq90t-2"})(["font-weight:600;padding-right:",";margin:0;"],(0,l.Z)(20)),f=(0,o.ZP)(i).withConfig({displayName:"NextPage__Icon",componentId:"sc-xdq90t-3"})(["color:",";width:",";"],c.BA,(0,l.Z)(30)),k=function(e){var n=e.title,t=e.href;return(0,u.jsxs)(h,{unstyled:!0,href:t,children:[(0,u.jsxs)("div",{children:[(0,u.jsx)(g,{children:"Continue on the next page"}),(0,u.jsx)(y,{children:n})]}),(0,u.jsx)("div",{children:(0,u.jsx)(f,{})})]})}},3475:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return D}});var o=t(6864),a=t(4730),r=(t(7294),t(3905)),s=t(710),i=t(8916),l=["components"],p={};function c(e){var n=e.components,t=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Theming"),(0,r.kt)("p",null,"styled-components has full theming support by exporting a ",(0,r.kt)("inlineCode",{parentName:"p"},"<ThemeProvider>")," wrapper component.\nThis component provides a theme to all React components underneath itself via the context API. In the render\ntree all styled-components will have access to the provided theme, even when they are multiple levels deep."),(0,r.kt)("p",null,"To illustrate this, let's create our Button component, but this time we'll pass some variables down\nas a theme."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-react"},'// Define our button, but with the use of props.theme this time\nconst Button = styled.button`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n\n  /* Color the border and text with theme.main */\n  color: ${props => props.theme.main};\n  border: 2px solid ${props => props.theme.main};\n`;\n\n// We are passing a default theme for Buttons that arent wrapped in the ThemeProvider\nButton.defaultProps = {\n  theme: {\n    main: "palevioletred"\n  }\n}\n\n// Define what props.theme will look like\nconst theme = {\n  main: "mediumseagreen"\n};\n\nrender(\n  <div>\n    <Button>Normal</Button>\n\n    <ThemeProvider theme={theme}>\n      <Button>Themed</Button>\n    </ThemeProvider>\n  </div>\n);\n')),(0,r.kt)("h3",null,"Function themes"),(0,r.kt)("p",null,"You can also pass a function for the theme prop. This function will receive the parent theme, that is from\nanother ",(0,r.kt)("inlineCode",{parentName:"p"},"<ThemeProvider>")," higher up the tree. This way themes themselves can be made contextual."),(0,r.kt)("p",null,"This example renders our above themed Button and a second one that uses a second ThemeProvider to invert the\nbackground and foreground colors. The function ",(0,r.kt)("inlineCode",{parentName:"p"},"invertTheme")," receives the upper theme and creates a new one."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-react"},'// Define our button, but with the use of props.theme this time\nconst Button = styled.button`\n  color: ${props => props.theme.fg};\n  border: 2px solid ${props => props.theme.fg};\n  background: ${props => props.theme.bg};\n\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n`;\n\n// Define our `fg` and `bg` on the theme\nconst theme = {\n  fg: "palevioletred",\n  bg: "white"\n};\n\n// This theme swaps `fg` and `bg`\nconst invertTheme = ({ fg, bg }) => ({\n  fg: bg,\n  bg: fg\n});\n\nrender(\n  <ThemeProvider theme={theme}>\n    <div>\n      <Button>Default Theme</Button>\n\n      <ThemeProvider theme={invertTheme}>\n        <Button>Inverted Theme</Button>\n      </ThemeProvider>\n    </div>\n  </ThemeProvider>\n);\n')),(0,r.kt)("h3",null,"Getting the theme without styled components"),(0,r.kt)("h4",null,"via ",(0,r.kt)("inlineCode",{parentName:"h4"},"withTheme")," higher-order component"),(0,r.kt)("p",null,"If you ever need to use the current theme outside styled components (e.g. inside big components), you can use\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"withTheme")," higher order component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { withTheme } from 'styled-components'\n\nclass MyComponent extends React.Component {\n  render() {\n    console.log('Current theme: ', this.props.theme)\n    // ...\n  }\n}\n\nexport default withTheme(MyComponent)\n")),(0,r.kt)("h4",null,"via ",(0,r.kt)("inlineCode",{parentName:"h4"},"useContext")," React hook | v4"),(0,r.kt)("p",null,"You can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"useContext")," to access the current theme outside of styled components when working with React Hooks."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\n\nconst MyComponent = () => {\n  const themeContext = useContext(ThemeContext)\n\n  console.log('Current theme: ', themeContext)\n  // ...\n}\n")),(0,r.kt)("h4",null,"via ",(0,r.kt)("inlineCode",{parentName:"h4"},"useTheme")," custom hook | v5"),(0,r.kt)("p",null,"You can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"useTheme")," to access the current theme outside of styled components when working with React Hooks."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { useTheme } from 'styled-components'\n\nconst MyComponent = () => {\n  const theme = useTheme()\n\n  console.log('Current theme: ', theme)\n  // ...\n}\n")),(0,r.kt)("h3",null,"The ",(0,r.kt)("inlineCode",{parentName:"h3"},"theme")," prop"),(0,r.kt)("p",null,"A theme can also be passed down to a component using the ",(0,r.kt)("inlineCode",{parentName:"p"},"theme")," prop."),(0,r.kt)("p",null,"This is useful to circumvent a missing ",(0,r.kt)("inlineCode",{parentName:"p"},"ThemeProvider")," or to override it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-react"},'// Define our button\nconst Button = styled.button`\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border-radius: 3px;\n\n  /* Color the border and text with theme.main */\n  color: ${props => props.theme.main};\n  border: 2px solid ${props => props.theme.main};\n`;\n\n// Define what main theme will look like\nconst theme = {\n  main: "mediumseagreen"\n};\n\nrender(\n  <div>\n    <Button theme={{ main: "royalblue" }}>Ad hoc theme</Button>\n    <ThemeProvider theme={theme}>\n      <div>\n        <Button>Themed</Button>\n        <Button theme={{ main: "darkorange" }}>Overridden</Button>\n      </div>\n    </ThemeProvider>\n  </div>\n);\n')))}c.isMDXComponent=!0;var d=["components"],m={};function u(e){var n=e.components,t=(0,a.Z)(e,d);return(0,r.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Refs | v4"),(0,r.kt)("p",null,"Passing a ",(0,r.kt)("inlineCode",{parentName:"p"},"ref")," prop to a styled component will give you one of two things depending on the styled target:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the underlying DOM node (if targeting a basic element, e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"styled.div"),")"),(0,r.kt)("li",{parentName:"ul"},"a React component instance (if targeting a custom component e.g. extended from ",(0,r.kt)("inlineCode",{parentName:"li"},"React.Component"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-react"},'const Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  color: palevioletred;\n  background: papayawhip;\n  border: none;\n  border-radius: 3px;\n`;\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <Input\n        ref={this.inputRef}\n        placeholder="Hover to focus!"\n        onMouseEnter={() => {\n          this.inputRef.current.focus()\n        }}\n      />\n    );\n  }\n}\n\nrender(\n  <Form />\n);\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Using an older version of styled-components (below 4.0.0) or of React? Use the ",(0,r.kt)("a",{parentName:"p",href:"/docs/api#innerref-prop"},(0,r.kt)("inlineCode",{parentName:"a"},"innerRef")," prop")," instead.")))}u.isMDXComponent=!0;var h=["components"],g={};function y(e){var n=e.components,t=(0,a.Z)(e,h);return(0,r.kt)("wrapper",(0,o.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Security"),(0,r.kt)("p",null,"Since styled-components allows you to use arbitrary input as interpolations, you must be\ncareful to sanitize that input. Using user input as styles can lead to any CSS being evaluated in the user's\nbrowser that an attacker can place in your application."),(0,r.kt)("p",null,"This example shows how bad user input can even lead to API endpoints being called on a user's\nbehalf."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"// Oh no! The user has given us a bad URL!\nconst userInput = '/api/withdraw-funds'\n\nconst ArbitraryComponent = styled.div`\n  background: url(${userInput});\n  /* More styles here... */\n`\n")),(0,r.kt)("p",null,"Be very careful! This is obviously a made-up example, but CSS injection can be unobvious and\nhave bad repercussions. Some IE versions even execute arbitrary JavaScript within url declarations."),(0,r.kt)("p",null,"There is an upcoming standard to sanitize CSS from JavaScript, ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape"},(0,r.kt)("inlineCode",{parentName:"a"},"CSS.escape")),". It's not very well supported across browsers yet, so we recommend using the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mathiasbynens/CSS.escape"},"polyfill by Mathias Bynens")," in your app."))}y.isMDXComponent=!0;var f=["components"],k={};function v(e){var n=e.components,t=(0,a.Z)(e,f);return(0,r.kt)("wrapper",(0,o.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Existing CSS"),(0,r.kt)("p",null,"There are a couple of implementation details that you should be aware of, if you choose to use\nstyled-components together with existing CSS."),(0,r.kt)("p",null,"styled-components generates an actual stylesheet with classes, and attaches those classes to\nthe DOM nodes of styled components via the ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," prop.\nIt injects the generated stylesheet at the end of the head of the document during runtime."),(0,r.kt)("h3",null,"Styling normal React components"),(0,r.kt)("p",null,"If you use the ",(0,r.kt)("inlineCode",{parentName:"p"},"styled(MyComponent)")," notation and ",(0,r.kt)("inlineCode",{parentName:"p"},"MyComponent")," does not\nrender the passed-in ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," prop, then no styles will be applied.\nTo avoid this issue, make sure your component attaches the passed-in className to a DOM node:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"class MyComponent extends React.Component {\n  render() {\n    // Attach the passed-in className to the DOM node\n    return <div className={this.props.className} />\n  }\n}\n")),(0,r.kt)("p",null,"If you have pre-existing styles with a class, you can combine the global class with the\npassed-in one:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"class MyComponent extends React.Component {\n  render() {\n    // Attach the passed-in className to the DOM node\n    return <div className={`some-global-class ${this.props.className}`} />\n  }\n}\n")),(0,r.kt)("h3",null,"Issues with specificity"),(0,r.kt)("p",null,"If you apply a global class together with a styled component class, the result might not be\nwhat you're expecting. If a property is defined in both classes with the same specificity,\nthe last one will win."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'// MyComponent.js\nconst MyComponent = styled.div`background-color: green;`;\n\n// my-component.css\n.red-bg {\n  background-color: red;\n}\n\n// For some reason this component still has a green background,\n// even though you\'re trying to override it with the "red-bg" class!\n<MyComponent className="red-bg" />\n')),(0,r.kt)("p",null,"In the above example the styled component class takes precedence over the global class, since\nstyled-components injects its styles during runtime at the end of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<head>")," by default.\nThus its styles win over other single classname selectors."),(0,r.kt)("p",null,"One solution is to bump up the specificity of the selectors in your stylesheet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"/* my-component.css */\n.red-bg.red-bg {\n  background-color: red;\n}\n")),(0,r.kt)("h3",null,"Avoiding conflicts with third-party styles and scripts"),(0,r.kt)("p",null,"If you deploy styled-components on a page you don't fully control, you may need to take\nprecautions to ensure that your component styles don't conflict with those of the host page."),(0,r.kt)("p",null,"The most common problem is insufficient specificity. For example, consider a host page with this\nstyle rule:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css"},"body.my-body button {\n  padding: 24px;\n}\n")),(0,r.kt)("p",null,"Since the rule contains a classname and two tag names, it has higher specificity than the single\nclassname selector generated by this styled component:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"styled.button`\n  padding: 16px;\n`\n")),(0,r.kt)("p",null,"There's no way to give your components complete immunity from the host page's styles, but you can\nat least boost the specificity of their style rules with\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/QuickBase/babel-plugin-styled-components-css-namespace"},"babel-plugin-styled-components-css-namespace"),",\nwhich allows you to specify a CSS namespace for all of your styled components. A good namespace\nwould be something like ",(0,r.kt)("inlineCode",{parentName:"p"},"#my-widget"),", if all of your styled-components render in a container\nwith ",(0,r.kt)("inlineCode",{parentName:"p"},'id="my-widget"'),", since ID selectors have more specificity than any number of classnames."),(0,r.kt)("p",null,"A rarer problem is conflicts between two instances of styled-components on the page. You can avoid\nthis by defining ",(0,r.kt)("inlineCode",{parentName:"p"},"process.env.SC_ATTR")," in the code bundle with your styled-components instance.\nThis value overrides the default ",(0,r.kt)("inlineCode",{parentName:"p"},"<style>")," tag attribute, ",(0,r.kt)("inlineCode",{parentName:"p"},"data-styled")," (",(0,r.kt)("inlineCode",{parentName:"p"},"data-styled-components")," in v3 and lower), allowing\neach styled-components instance to recognize its own tags."))}v.isMDXComponent=!0;var b=["components"],w={};function N(e){var n=e.components,t=(0,a.Z)(e,b);return(0,r.kt)("wrapper",(0,o.Z)({},w,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Tagged Template Literals"),(0,r.kt)("p",null,"Tagged Template Literals are a new feature in ES6. They let you define custom string interpolation rules,\nwhich is how we're able to create styled components."),(0,r.kt)("p",null,"If you pass no interpolations, the first argument your function receives is an array with a string in it."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"// These are equivalent:\nfn`some string here`;\nfn(['some string here']);\n")),(0,r.kt)("p",null,"Once you pass interpolations, the array contains the passed string, split at the positions of the interpolations.\nThe rest of the arguments will be the interpolations, in order."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const aVar = 'good';\n\n// These are equivalent:\nfn`this is a ${aVar} day`;\nfn(['this is a ', ' day'], aVar);\n")),(0,r.kt)("p",null,"This is a bit cumbersome to work with, but it means that we can receive variables, functions, or mixins\n(",(0,r.kt)("inlineCode",{parentName:"p"},"css")," helper) in styled components and can flatten that into pure CSS."),(0,r.kt)("p",null,"Speaking of which, during flattening, styled-components ignores interpolations that evaluate to ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", or an empty string (",(0,r.kt)("inlineCode",{parentName:"p"},'""'),"), which means you're free to use\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND#Short-circuit_evaluation"},"short-circuit evaluation"),"\nto conditionally add CSS rules."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"const Title = styled.h1`\n  /* Text centering won't break if props.upsidedown is falsy */\n  ${props => props.upsidedown && 'transform: rotate(180deg);'}\n  text-align: center;\n`;\n")),(0,r.kt)("p",null,"If you want to learn more about tagged template literals, check out Max Stoiber's article:\n",(0,r.kt)("a",{parentName:"p",href:"https://mxstbr.blog/2016/11/styled-components-magic-explained/"},"The magic behind \ud83d\udc85\ud83c\udffe styled-components")))}N.isMDXComponent=!0;var x=["components"],S={};function C(e){var n=e.components,t=(0,a.Z)(e,x);return(0,r.kt)("wrapper",(0,o.Z)({},S,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Server Side Rendering | v2+"),(0,r.kt)("p",null,"styled-components supports concurrent server side rendering, with stylesheet rehydration.\nThe basic idea is that everytime you render your app on the server, you can create\na ",(0,r.kt)("inlineCode",{parentName:"p"},"ServerStyleSheet")," and add a provider to your React tree, that accepts styles\nvia a context API."),(0,r.kt)("p",null,"This doesn't interfere with global styles, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"keyframes")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"createGlobalStyle")," and\nallows you to use styled-components with React DOM's various SSR APIs."),(0,r.kt)("h3",null,"Tooling setup"),(0,r.kt)("p",null,"In order to reliably perform server side rendering and have the client side bundle pick up without issues, you'll need to use our ",(0,r.kt)("a",{parentName:"p",href:"/docs/tooling#babel-plugin"},"babel plugin"),". It prevents checksum mismatches by adding a deterministic ID to each styled component. Refer to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tooling#serverside-rendering"},"tooling documentation")," for more information."),(0,r.kt)("p",null,"For TypeScript users, our resident TS guru Igor Oleinikov put together a ",(0,r.kt)("a",{parentName:"p",href:"/docs/tooling#typescript-plugin"},"TypeScript plugin")," for the webpack ts-loader / awesome-typescript-loader toolchain that accomplishes some similar tasks."),(0,r.kt)("p",null,"If possible, we definitely recommend using the babel plugin though because it is updated the most frequently. It's now possible to ",(0,r.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/babel-preset-typescript"},"compile TypeScript using Babel"),", so it may be worth switching off TS loader and onto a pure Babel implementation to reap the ecosystem benefits."),(0,r.kt)("h3",null,"Example"),(0,r.kt)("p",null,"The basic API goes as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { renderToString } from 'react-dom/server';\nimport { ServerStyleSheet } from 'styled-components';\n\nconst sheet = new ServerStyleSheet();\ntry {\n  const html = renderToString(sheet.collectStyles(<YourApp />));\n  const styleTags = sheet.getStyleTags(); // or sheet.getStyleElement();\n} catch (error) {\n  // handle error\n  console.error(error);\n} finally {\n  sheet.seal();\n}\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"collectStyles")," method wraps your element in a provider. Optionally you can use\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"StyleSheetManager")," provider directly, instead of this method. Just make sure not to\nuse it on the client-side."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import { renderToString } from 'react-dom/server';\nimport { ServerStyleSheet, StyleSheetManager } from 'styled-components';\n\nconst sheet = new ServerStyleSheet();\ntry {\n  const html = renderToString(\n    <StyleSheetManager sheet={sheet.instance}>\n      <YourApp />\n    </StyleSheetManager>\n  );\n  const styleTags = sheet.getStyleTags(); // or sheet.getStyleElement();\n} catch (error) {\n  // handle error\n  console.error(error);\n} finally {\n  sheet.seal();\n}\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"sheet.getStyleTags()")," returns a string of multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"<style>")," tags.\nYou need to take this into account when adding the CSS string to your HTML output."),(0,r.kt)("p",null,"Alternatively the ",(0,r.kt)("inlineCode",{parentName:"p"},"ServerStyleSheet")," instance also has a ",(0,r.kt)("inlineCode",{parentName:"p"},"getStyleElement()")," method\nthat returns an array of React elements."),(0,r.kt)("p",null,"If rendering fails for any reason it's a good idea to use ",(0,r.kt)("inlineCode",{parentName:"p"},"try...catch...finally")," to ensure that the ",(0,r.kt)("inlineCode",{parentName:"p"},"sheet")," object will always be available for garbage collection. Make sure ",(0,r.kt)("inlineCode",{parentName:"p"},"sheet.seal()")," is only called after ",(0,r.kt)("inlineCode",{parentName:"p"},"sheet.getStyleTags()")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"sheet.getStyleElement()")," have been called otherwise a different error will be thrown."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"sheet.getStyleTags()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"sheet.getStyleElement()")," can only be called after your element is rendered. As a result, components from ",(0,r.kt)("inlineCode",{parentName:"p"},"sheet.getStyleElement()")," cannot be combined with ",(0,r.kt)("inlineCode",{parentName:"p"},"<YourApp />")," into a larger component.")),(0,r.kt)("h3",null,"Next.js"),(0,r.kt)("h4",null,"With Babel"),(0,r.kt)("p",null,"Basically you need to add a custom ",(0,r.kt)("inlineCode",{parentName:"p"},"pages/_document.js")," (if you don't have one). Then ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vercel/next.js/blob/canary/examples/with-styled-components-babel/pages/_document.js"},"copy the logic")," for styled-components to inject the server side rendered styles into the ",(0,r.kt)("inlineCode",{parentName:"p"},"<head>"),"."),(0,r.kt)("p",null,"Refer to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vercel/next.js/tree/canary/examples/with-styled-components-babel"},"our example")," in the Next.js repo for an up-to-date usage example."),(0,r.kt)("h4",null,"With SWC"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://nextjs.org/blog/next-12"},"Since version 12"),", Next.js uses a Rust compiler called SWC. If you're not using any babel plugin, you should refer to ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vercel/next.js/tree/canary/examples/with-styled-components"},"this example")," instead."),(0,r.kt)("p",null,"On this version, you ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vercel/next.js/blob/canary/examples/with-styled-components/next.config.js"},"only need to add")," ",(0,r.kt)("inlineCode",{parentName:"p"},"styledComponents: true,")," at the compiler options in the ",(0,r.kt)("inlineCode",{parentName:"p"},"next.config.js")," file."),(0,r.kt)("h3",null,"Gatsby"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.gatsbyjs.org/"},"Gatsby")," has an official plugin that enables server-side rendering for styled-components."),(0,r.kt)("p",null,"Refer to ",(0,r.kt)("a",{parentName:"p",href:"https://www.gatsbyjs.org/packages/gatsby-plugin-styled-components/"},"the plugin's page")," for setup and usage instructions."),(0,r.kt)("h3",null,"Streaming Rendering"),(0,r.kt)("p",null,"styled-components offers a streaming API for use with ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/react-dom-server.html#rendertonodestream"},"ReactDOMServer.renderToNodeStream()"),". There are two parts to a streaming implementation:"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"On the server:")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ReactDOMServer.renderToNodeStream"),' emits a "readable" stream that styled-components wraps. As whole chunks of HTML are pushed onto the stream, if any corresponding styles are ready to be rendered, a style block is prepended to React\'s HTML and forwarded on to the client browser.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { renderToNodeStream } from 'react-dom/server';\nimport styled, { ServerStyleSheet } from 'styled-components';\n\n// if you're using express.js, you'd have access to the response object \"res\"\n\n// typically you'd want to write some preliminary HTML, since React doesn't handle this\nres.write('<html><head><title>Test</title></head><body>');\n\nconst Heading = styled.h1`\n  color: red;\n`;\n\nconst sheet = new ServerStyleSheet();\nconst jsx = sheet.collectStyles(<Heading>Hello SSR!</Heading>);\nconst stream = sheet.interleaveWithNodeStream(renderToNodeStream(jsx));\n\n// you'd then pipe the stream into the response object until it's done\nstream.pipe(res, { end: false });\n\n// and finalize the response with closing HTML\nstream.on('end', () => res.end('</body></html>'));\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"On the client:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { hydrate } from 'react-dom';\n\nhydrate();\n// your client-side react implementation\n")),(0,r.kt)("p",null,"After client-side rehydration is complete, styled-components will take over as usual and inject any further dynamic styles after the relocated streaming ones."))}C.isMDXComponent=!0;var T=["components"],M={};function j(e){var n=e.components,t=(0,a.Z)(e,T);return(0,r.kt)("wrapper",(0,o.Z)({},M,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Referring to other components"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This is a ",(0,r.kt)("strong",{parentName:"p"},"web-specific")," API and you ",(0,r.kt)("strong",{parentName:"p"},"won't")," be able to use it in react-native.")),(0,r.kt)("p",null,"There are many ways to apply contextual overrides to a component's styling. That being said,\nit rarely is easy without rigging up a well-known targeting CSS selector paradigm\nand then making them accessible for use in interpolations."),(0,r.kt)("p",null,'styled-components solves this use case cleanly via the "component selector" pattern. Whenever\na component is created or wrapped by the styled() factory function, it is also assigned a\nstable CSS class for use in targeting. This allows for extremely powerful composition patterns\nwithout having to fuss around with naming and avoiding selector collisions.'),(0,r.kt)("p",null,"A practical example: here, our Icon component defines its response to the parent Link being hovered:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-react"},'const Link = styled.a`\n  display: flex;\n  align-items: center;\n  padding: 5px 10px;\n  background: papayawhip;\n  color: palevioletred;\n`;\n\nconst Icon = styled.svg`\n  flex: none;\n  transition: fill 0.25s;\n  width: 48px;\n  height: 48px;\n\n  ${Link}:hover & {\n    fill: rebeccapurple;\n  }\n`;\n\nconst Label = styled.span`\n  display: flex;\n  align-items: center;\n  line-height: 1.2;\n\n  &::before {\n    content: \'\u25c0\';\n    margin: 0 10px;\n  }\n`;\n\nrender(\n  <Link href="#">\n    <Icon viewBox="0 0 20 20">\n      <path d="M10 15h8c1 0 2-1 2-2V3c0-1-1-2-2-2H2C1 1 0 2 0 3v10c0 1 1 2 2 2h4v4l4-4zM5 7h2v2H5V7zm4 0h2v2H9V7zm4 0h2v2h-2V7z"/>\n    </Icon>\n    <Label>Hovering my parent changes my style!</Label>\n  </Link>\n);\n')),(0,r.kt)("p",null,"We could have nested the color-changing rule within our Link component, but then we'd have to\nconsider both sets of rules to understand why Icon behaves as it does."),(0,r.kt)("h3",null,"Caveat"),(0,r.kt)("p",null,"This behaviour is only supported within the context of ",(0,r.kt)("em",{parentName:"p"},"Styled")," Components:\nattempting to mount ",(0,r.kt)("inlineCode",{parentName:"p"},"B")," in the following example will fail because component\n",(0,r.kt)("inlineCode",{parentName:"p"},"A")," is an instance of React.Component not a Styled Component."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"class A extends React.Component {\n  render() {\n    return <div />\n  }\n}\n\nconst B = styled.div`\n  ${A} {\n  }\n`\n")),(0,r.kt)("p",null,"The error thrown - ",(0,r.kt)("inlineCode",{parentName:"p"},"Cannot call a class as a function")," - occurs because the\nstyled component is attempting to call the component as an interpolation function."),(0,r.kt)("p",null,"However, wrapping ",(0,r.kt)("inlineCode",{parentName:"p"},"A")," in a styled() factory makes it eligible for interpolation -- just\nmake sure the wrapped component passes along ",(0,r.kt)("inlineCode",{parentName:"p"},"className"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"class A extends React.Component {\n  render() {\n    return <div className={this.props.className} />\n  }\n}\n\nconst StyledA = styled(A)``\n\nconst B = styled.div`\n  ${StyledA} {\n  }\n`\n")))}j.isMDXComponent=!0;var R=["components"],Z={};function A(e){var n=e.components,t=(0,a.Z)(e,R);return(0,r.kt)("wrapper",(0,o.Z)({},Z,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",null,"Style Objects"),(0,r.kt)("p",null,"styled-components optionally supports writing CSS as JavaScript objects instead of strings. This is particularly useful when you have existing style objects and want to gradually move to styled-components."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-react"},"// Static object\nconst Box = styled.div({\n  background: 'palevioletred',\n  height: '50px',\n  width: '50px'\n});\n\n// Adapting based on props\nconst PropsBox = styled.div(props => ({\n  background: props.background,\n  height: '50px',\n  width: '50px'\n}));\n\nrender(\n  <div>\n    <Box />\n    <PropsBox background=\"blue\" />\n  </div>\n);\n")))}A.isMDXComponent=!0;var I=["components"],B={},P=function(e){var n=e.children;return(0,r.kt)(s.Z,{title:"Advanced Usage",description:"Theming, refs, Security, Existing CSS, Tagged Template Literals, Server-Side Rendering and Style Objects"},n)};function D(e){var n=e.components,t=(0,a.Z)(e,I);return(0,r.kt)(P,(0,o.Z)({},B,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)(c,{mdxType:"Theming"}),(0,r.kt)(u,{mdxType:"Refs"}),(0,r.kt)(y,{mdxType:"Security"}),(0,r.kt)(v,{mdxType:"ExistingCSS"}),(0,r.kt)(N,{mdxType:"TaggedTemplateLiterals"}),(0,r.kt)(C,{mdxType:"ServerSideRendering"}),(0,r.kt)(j,{mdxType:"ComponentsAsSelectors"}),(0,r.kt)(A,{mdxType:"StyleObjects"}),(0,r.kt)(i.Z,{href:"/docs/api",title:"API Reference",mdxType:"NextPage"}))}D.isMDXComponent=!0},3273:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/advanced",function(){return t(3475)}])},1163:function(e,n,t){e.exports=t(9898)},6864:function(e,n,t){"use strict";function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},o.apply(this,arguments)}t.d(n,{Z:function(){return o}})}},function(e){e.O(0,[791,774,888,179],(function(){return n=3273,e(e.s=n);var n}));var n=e.O();_N_E=n}]);
//# sourceMappingURL=advanced-f50b883504c95d5f.js.map